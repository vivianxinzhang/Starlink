[{"/Users/wx6698/Desktop/Starlink/starlink/src/index.js":"1","/Users/wx6698/Desktop/Starlink/starlink/src/reportWebVitals.js":"2","/Users/wx6698/Desktop/Starlink/starlink/src/components/App.js":"3","/Users/wx6698/Desktop/Starlink/starlink/src/components/Header.js":"4","/Users/wx6698/Desktop/Starlink/starlink/src/components/Footer.js":"5","/Users/wx6698/Desktop/Starlink/starlink/src/components/Main.js":"6","/Users/wx6698/Desktop/Starlink/starlink/src/components/SatSetting.js":"7","/Users/wx6698/Desktop/Starlink/starlink/src/components/SatelliteList.js":"8","/Users/wx6698/Desktop/Starlink/starlink/src/constants.js":"9","/Users/wx6698/Desktop/Starlink/starlink/src/components/WorldMap.js":"10"},{"size":757,"mtime":1612105749688,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611274703356,"results":"13","hashOfConfig":"12"},{"size":260,"mtime":1612105749676,"results":"14","hashOfConfig":"12"},{"size":568,"mtime":1611281789869,"results":"15","hashOfConfig":"12"},{"size":342,"mtime":1611296754978,"results":"16","hashOfConfig":"12"},{"size":2477,"mtime":1612503738359,"results":"17","hashOfConfig":"12"},{"size":4740,"mtime":1612105749687,"results":"18","hashOfConfig":"12"},{"size":3547,"mtime":1612308932808,"results":"19","hashOfConfig":"12"},{"size":236,"mtime":1612306974939,"results":"20","hashOfConfig":"12"},{"size":2245,"mtime":1612505326962,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z0ij0r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wx6698/Desktop/Starlink/starlink/src/index.js",[],["44","45"],"/Users/wx6698/Desktop/Starlink/starlink/src/reportWebVitals.js",[],"/Users/wx6698/Desktop/Starlink/starlink/src/components/App.js",[],"/Users/wx6698/Desktop/Starlink/starlink/src/components/Header.js",[],"/Users/wx6698/Desktop/Starlink/starlink/src/components/Footer.js",[],"/Users/wx6698/Desktop/Starlink/starlink/src/components/Main.js",[],"/Users/wx6698/Desktop/Starlink/starlink/src/components/SatSetting.js",[],"/Users/wx6698/Desktop/Starlink/starlink/src/components/SatelliteList.js",["46","47"],"import React, {Component} from 'react';\nimport { List, Avatar, Button, Checkbox, Spin } from 'antd';\nimport satelliteIcon from \"../assets/images/logo.svg\";\nimport {select} from \"d3-selection\";\n\nclass SatelliteList extends Component {\n    constructor(){\n        super();\n        this.state = {\n            selected: [],\n            isLoad: false\n        };\n    }\n\n    onChange = e => {\n        console.log('clicked -> ', e.target);\n        const { dataInfo, checked } = e.target;\n        // processing the satellite\n        const { selected } = this.state;\n        // add or remove selected satellite to/from the satList\n        const list = this.addOrRemove(dataInfo, checked, selected);\n        this.setState({ selected: list })\n    }\n\n    addOrRemove = (sat, status, list) => {\n        const found = list.some( entry => entry.satid === sat.satid);\n        // case1: check is true\n        // -> sat not in list -> add item\n        // -> sat is in list -> do nothing\n\n        // case2: check is false\n        // -> sat not in list -> do nothing\n        // -> sat is in list -> remove it\n\n        if(status && !found){\n            // list.push(item)\n            list = [...list, sat]\n        }\n\n        if(!status && found){\n            list = list.filter( entry => {\n                return entry.satid !== sat.satid;\n            });\n        }\n        console.log(list);\n        return list;\n    }\n\n    render() {\n        console.log(this.props);\n        const satList = this.props.satInfo ? this.props.satInfo.above : [];\n        const { isLoad } = this.props;\n        const { selected } = this.state;\n        return (\n            <div className=\"sat-list-box\">\n                <br/>\n                <Button\n                    className=\"sat-list-btn\"\n                    type=\"primary\"\n                    // disabled={ selected.length === 0 }\n                >\n                        Track on the map\n                </Button>\n                <hr/>\n                {\n                    isLoad ?\n                        <div className=\"spin-box\">\n                            <Spin tip=\"Loading...\" size=\"large\" />\n                        </div>\n                        :\n                        <List\n                            className=\"sat-list\"\n                            itemLayout=\"horizontal\"\n                            size=\"small\"\n                            dataSource={satList}\n                            renderItem={item => (\n                                <List.Item\n                                    actions={[<Checkbox dataInfo={item} onChange={this.onChange}/>]}\n                                >\n                                    <List.Item.Meta\n                                        avatar={<Avatar size={50} src={satelliteIcon} />}\n                                        title={<p>{item.satname}</p>}\n                                        description={`Launch Date: ${item.launchDate}`}\n                                    />\n                                </List.Item>\n                            )}\n//                             renderItem={item => {\n//                                   //console.log(item);\n//                                   return (\n//                                         <List.Item>\n//                                               haha\n//                                         </List.Item>\n//                                   )\n//                             }}\n                        />\n                }\n            </div>\n        );\n    }\n}\n\nexport default SatelliteList;","/Users/wx6698/Desktop/Starlink/starlink/src/constants.js",[],"/Users/wx6698/Desktop/Starlink/starlink/src/components/WorldMap.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":9,"nodeType":"54","messageId":"55","endLine":4,"endColumn":15},{"ruleId":"52","severity":1,"message":"56","line":53,"column":17,"nodeType":"54","messageId":"55","endLine":53,"endColumn":25},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'select' is defined but never used.","Identifier","unusedVar","'selected' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]